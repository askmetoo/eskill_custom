{
 "absolute_value": 0,
 "align_labels_right": 0,
 "creation": "2020-10-14 14:47:18.686231",
 "css": "@font-face {\n\tfont-family: DaxlinePro;\n\tfont-style: normal;\n\tfont-weight: 300;\n\tsrc: url(/fonts/DaxlinePro.ttf);\n}\n\n@font-face {\n\tfont-family: Neuropol;\n\tfont-style: normal;\n\tfont-weight: 300;\n\tsrc: url(/fonts/NeuropolXRG.ttf);\n}\n\n@font-face {\n    font-family: 'Atlanta';\n    src: url(/fonts/Atlanta-Book.woff2) format('woff2'),\n        url(/fonts/Atlanta-Book.woff) format('woff'),\n        url(/fonts/Atlanta-Book.ttf) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n.print-format { \n    padding: 0mm !important;\n    font-family: 'Atlanta';\n}\n\nbody, p, span, div, element {\n    color: #474c51;\n    letter-spacing: normal !important;\n}\n\n#header-image {\n    background-image: url(/files/Eskill_Header.jpg);\n    display: table;\n    width: 100%;\n    background-size: 211mm;\n    background-repeat: no-repeat;\n    height: 18mm;\n    background-position: left top;\n    padding-top: 7mm !important;\n}\n\n#print-heading {\n    font-family: DaxlinePro;\n    font-size: 18pt;\n    font-weight: bold;\n    line-height: 1;\n    padding: 0mm !important;\n    margin-top: 4mm !important;\n    margin-right: 6mm !important;\n    margin-bottom: 8mm !important;\n    text-align: right;\n}\n\n.section {\n    margin-left: 7mm;\n    margin-right: 7mm;\n    display: table;\n    border-collapse: separate;\n    border-spacing: 1mm;\n    width: 197mm !important;\n    border-bottom: 1px solid black;\n    padding-bottom: 10mm;\n}\n\n.layout-div {\n    margin: 0 !important;\n    padding: 0 !important;\n    display: table-cell;\n    vertical-align: top;\n    padding-top: 10mm;\n}\n\n.black-box {\n    border: 1px solid #474c51;\n    border-radius: 3px;\n    padding: 0.5mm;\n    width: auto;\n    height: auto;\n    min-height: 12mm;\n    display: table-cell;\n}\n\n#product-info {\n    width: 117mm;\n}\n\n#warranty-status {\n    margin: 10px 0px 0px 0px;\n}\n\n.under-warranty {\n    background-color: green;\n    border-radius: 4px;\n    color: white;\n    font-size: 12px;\n    padding: 2px 6px;\n    margin: 4px 0px 20px 0px;\n}\n\n.not-under-warranty {\n    background-color: red;\n    border-radius: 4px;\n    color: white;\n    font-size: 12px;\n    padding: 2px 6px;\n    margin: 4px 0px 20px 0px;\n}\n\n.expires-today {\n    background-color: orange;\n    border-radius: 4px;\n    color: white;\n    font-size: 12px;\n    padding: 2px 6px;\n    margin: 4px 0px 20px 0px;\n}\n\n.expiry-unknown {\n    background-color: black;\n    border-radius: 4px;\n    color: white;\n    font-size: 12px;\n    padding: 2px 6px;\n    margin: 4px 0px 20px 0px;\n}\n\n#product-status, #warranty-period, #product-warehouse {\n    margin: 0mm;\n}\n\n#product-image {\n    width: 80mm;\n    text-align: right;\n}\n\nh1 {\n    font-family: Atlanta;\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 15px;\n}\n\nh2 {\n    font-family: Atlanta;\n    font-size: 12px;\n    font-weight: bold;\n    letter-spacing: 2px;\n    margin-top: 0;\n}\n\n#history-line {\n    font-size:8pt;\n}\n\n#footer-text {\n    width: 100%;\n    text-align: center;\n}\n\n.layout-table {\n    width: 197mm;\n}\n.layout-row {\n    border-bottom: 0.5px dotted #ffbc1f;\n}\n\n#date-cell {\n    border-right: 4px solid #ffbc1f;\n    width: 30mm;\n    text-align: right;\n}",
 "custom_format": 1,
 "default_print_language": "en",
 "disabled": 0,
 "doc_type": "Serial No",
 "docstatus": 0,
 "doctype": "Print Format",
 "font": "Default",
 "html": "{% macro pageheader() %}\n\n<div id=\"header-image\" class=\"layout-div\">\n    <div id=\"print-heading\">\n        Serial Number Report\n    </div>\n</div>\n\n{% endmacro %}\n\n{% macro pagefooter() %}\n<div id=\"footer-text\">\n    Report Generated on {{ frappe.utils.formatdate(frappe.utils.today(), 'dd-MM-YYYY') }} by {{ frappe.user }}\n</div>\n\n{% endmacro %}\n\n{% set output_line = namespace(value=[]) %}\n{% set installed = namespace(components=[]) %}\n\n\n\n\n\n{{ pageheader() }}\n\n<div class=\"section\">\n    <div class=\"layout-div\" id=\"product-info\">\n        <h1>{{doc.item_name }}</h1><h2>{{ doc.serial_no }}</h2>\n\n        {% if doc.status == \"Delivered\" %}\n\n            {% if doc.warranty_expiry_date %}\n                {% set date_difference = frappe.utils.date_diff(doc.warranty_expiry_date,frappe.utils.today()) %}\n                {% if date_difference >= 0 %}Days remaining: {{ date_difference }}{% endif %}\n            {% endif %}\n            {% if doc.warranty_expiry_date and date_difference < 0 %}\n                <p><span class=\"not-under-warranty\">Not Under Warranty</span></p>\n                <p id=\"warranty-status\">Warranty expired on {{ frappe.utils.formatdate(doc.warranty_expiry_date) }}</p>\n                \n            {% elif doc.warranty_expiry_date and date_difference > 0 %}\n                <p><span class=\"under-warranty\">Under Warranty</span></p>\n                <p id=\"warranty-status\">Warranty expires on {{ frappe.utils.formatdate(doc.warranty_expiry_date) }}</p>\n                \n            {% elif doc.warranty_expiry_date and date_difference == 0 %}\n                <p><span class=\"expires-today\">Warranty Expires Today</span></p>\n                <p id=\"warranty-status\">Warranty expires on {{ frappe.utils.formatdate(doc.warranty_expiry_date) }}</p>\n                \n            {% else %}\n                <p><span class=\"expiry-unknown\">Unknown</span></p>\n                <p id=\"warranty-status\">Warranty expiry date not specified</p>\n                \n            {% endif %}\n        {% endif %}\n        <p id=\"product-status\">Status: {{ doc.status }}</p>\n        {% if doc.warehouse %}\n            {% set current_warehouse = frappe.get_doc(\"Warehouse\", doc.warehouse) %}\n            <p id=\"product-warehouse\">Location: {{ current_warehouse.warehouse_name }}</p>\n        {% endif %}\n        {% if doc.warranty_period %}<p id=\"warranty-period\">Warranty Period: {{ doc.warranty_period }} days</p>{% else %}Warranty Period: Not Specified{% endif %}        \n    </div>\n    {% set thisproduct = frappe.get_doc(\"Item\", doc.item_code) %}\n    {% if thisproduct.image %}\n        <div id=\"product-image\">\n            {% set display_image = '<img src=\\\"' ~ thisproduct.image ~ '\\\" style=\\\"max-width: 200px; max-height: 200px;\\\">' | safe %}\n            {{ display_image }}\n        </div>\n    {% endif %}\n</div>\n<div class=\"section\">\n    <h2>Product History</h2>\n\n        {# Get from Purchase Receipts #}\n        \n        {% set purchase_receipt_items = frappe.get_all('Purchase Receipt Item', filters=[['serial_no', 'like', '%'~doc.serial_no~'%']], fields=['name','docstatus','parent','qty','warehouse']) %}\n\n        {% for pr_item in purchase_receipt_items %}\n            {% set thispr = frappe.get_doc(\"Purchase Receipt\", pr_item.parent) %}\n            {% if thispr.docstatus != 2 and thispr.docstatus != 0 %}\n                {% set textline %}\n                    {% if not thispr.is_return %}\n                        Received from {{ thispr.supplier_name }} on {{ pr_item.parent }}\n                        {% if pr_item.project %}, linked to project \"{{ pr_item.project }}\"{% endif %}\n                        {% if pr_item.qty == 1 %}, and was the only unit of this model.{% else %}, and was 1 of {{ pr_item.qty | int }} units of this model.{% endif %}\n                        {% if pr_item.warehouse %}\n                            {% set dest_warehouse = frappe.get_doc(\"Warehouse\", pr_item.warehouse) %}\n                            It was received into {{ dest_warehouse.warehouse_name }}.\n                        {% endif %}\n                    {% else %}\n                        Returned to {{ thispr.supplier_name }} on {{ pr_item.parent }}\n                        {% if pr_item.warehouse %}\n                            {% set source_warehouse = frappe.get_doc(\"Warehouse\", pr_item.warehouse) %}\n                            , leaving from {{ source_warehouse.warehouse_name }}.\n                        {% else %}\n                            .\n                        {% endif %}            \n                    {% endif %}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(thispr.posting_date), 'yyyy-MM-dd'), 'desc': textline }] %}            \n            {% endif %}\n        {% endfor %}\n\n        \n        {# Get from Stock Entries #}\n        \n        {% set stock_entry_details = frappe.get_all('Stock Entry Detail', filters=[['serial_no', 'like', '%'~doc.serial_no~'%']], fields=['name','docstatus','parent','qty','s_warehouse','t_warehouse','project']) %}\n        {% for se_detail in stock_entry_details %}\n            {% set thisse = frappe.get_doc(\"Stock Entry\", se_detail.parent) %}\n            {% if thisse.docstatus != 2 and thisse.docstatus != 0 %}\n                {% set textline %}\n                    {% if se_detail.s_warehouse %}{% set source_warehouse = frappe.get_doc(\"Warehouse\", se_detail.s_warehouse) %}{% endif %}\n                    {% if se_detail.t_warehouse %}{% set dest_warehouse = frappe.get_doc(\"Warehouse\", se_detail.t_warehouse) %}{% endif %}\n                    {% if se_detail.s_warehouse and se_detail.t_warehouse %}\n                        Unit was transferred from {{ source_warehouse.warehouse_name }} to {{ dest_warehouse.warehouse_name }} on {{ se_detail.parent }}\n                        {% if thisse.project %}\n                            , linked to project \"{{ thisse.project }}\"\n                        {% elif not thisse.project and se_detail.project %}\n                            , linked to project \"{{ se_detail.project }}\"\n                        {% endif %}\n                        {% if se_detail.qty == 1 %}, and was the only unit of this model moved.{% else %}, and was 1 of {{ se_detail.qty | int }} units of this model moved.{% endif %}                    \n                    {% elif se_detail.s_warehouse and not se_detail.t_warehouse %}\n                       Delivered from {{ source_warehouse.warehouse_name }} on stock entry {{ se_detail.parent }}.\n                    {% elif se_detail.t_warehouse and not se_detail.s_warehouse %}\n                       Received into {{ dest_warehouse.warehouse_name }} on stock entry {{ se_detail.parent }}.\n                    {% endif %}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(thisse.posting_date), 'yyyy-MM-dd'), 'desc': textline }] %}            \n            {% endif %}\n        {% endfor %}\n        \n        \n        {# Get from Delivery Notes #}\n        \n        {% set delivery_note_items = frappe.get_all('Delivery Note Item', filters=[['serial_no', 'like', '%'~doc.serial_no~'%']], fields=['name','docstatus','parent','qty','warehouse','reason_for_return']) %}\n\n        {% for dnote_item in delivery_note_items %}\n            {% set thisdnote = frappe.get_doc(\"Delivery Note\", dnote_item.parent) %}\n            {% if thisdnote.docstatus != 2 and thisdnote.status != 0 %}\n                {% if not thisdnote.is_return %}\n                    {% set textline %}\n                        Delivered to {{ thisdnote.customer_name }} on {{ dnote_item.parent }}\n                        {% if thisdnote.project %}, linked to project \"{{ thisdnote.project }}\"{% endif %}\n                        {% if dnote_item.qty == 1 %}, and was the only unit of this model.{% else %}, and was 1 of {{ dnote_item.qty | int }} units of this model.{% endif %}\n                        {% if dnote_item.warehouse %}\n                            {% set source_warehouse = frappe.get_doc(\"Warehouse\", dnote_item.warehouse) %}\n                            Delivery was made from {{ source_warehouse.warehouse_name }}.\n                        {% endif %}\n                    {% endset %}\n                {% else %}\n                    {% set textline %}\n                        Returned by {{ thisdnote.customer_name }} on {{ dnote_item.parent }}\n                        {% if dnote_item.warehouse %}\n                            {% set dest_warehouse = frappe.get_doc(\"Warehouse\", dnote_item.warehouse) %}\n                            , received into location {{ dest_warehouse.warehouse_name }}.\n                        {% else %}\n                            .\n                        {% endif %}  \n                        {% if dnote_item.reason_for_return %} Reason given for return: \"{{ dnote_item.reason_for_return }}\".{% endif %}\n                    {% endset %}\n                {% endif %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(thisdnote.posting_date), 'yyyy-MM-dd'), 'desc': textline }] %}            \n            {% endif %}\n        {% endfor %}        \n\n\n        {# Get from Stock Recons positive #}\n        \n        {% set stock_recon_items = frappe.get_all('Stock Reconciliation Item', filters=[['serial_no', 'like', '%'~doc.serial_no~'%']], fields=['name','docstatus','parent','warehouse']) %}\n\n        {% for sr_item in stock_recon_items %}\n            {% set thissr = frappe.get_doc(\"Stock Reconciliation\", sr_item.parent) %}\n            {% if thissr.docstatus != 2 and thissr.docstatus != 0 %}\n                {% if sr_item.warehouse %}{% set dest_warehouse = frappe.get_doc(\"Warehouse\", sr_item.warehouse) %}{% endif %}\n                    {% if thissr.purpose == \"Opening Stock\" %}\n                        {% set textline %}\n                            Brought into {% if dest_warehouse.warehouse_name %}{{ dest_warehouse.warehouse_name }}{% else %}unknown location{% endif %} as opening stock, on stock reconciliation {{ sr_item.parent }}.\n                        {% endset %}\n                    {% else %}\n                        {% set textline %}\n                            Confirmed in stock, in {% if dest_warehouse.warehouse_name %}{{ dest_warehouse.warehouse_name }}{% else %}unknown location{% endif %}, on stock reconciliation {{ sr_item.parent }}.\n                        {% endset %}\n                    {% endif %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(thissr.posting_date), 'yyyy-MM-dd'), 'desc': textline }] %}\n            {% endif %}\n        {% endfor %} \n        \n        {# Get from Stock Recons negative #}\n        \n        {% set stock_recon_items = frappe.get_all('Stock Reconciliation Item', filters={'current_serial_no': ['like', '%'~doc.serial_no~'%'],'serial_no': ['not like', '%'~doc.serial_no~'%']}, fields=['name','docstatus','parent','warehouse']) %}\n\n        {% for sr_item in stock_recon_items %}\n            {% set thissr = frappe.get_doc(\"Stock Reconciliation\", sr_item.parent) %}\n            {% if thissr.docstatus != 2 and thissrdoc.status != 0 %}\n                {% if sr_item.warehouse %}{% set dest_warehouse = frappe.get_doc(\"Warehouse\", sr_item.warehouse) %}{% endif %}\n                {% set textline %}\n                    Removed from {% if dest_warehouse.warehouse_name %}{{ dest_warehouse.warehouse_name }}{% else %}unknown location{% endif %}, on stock reconciliation {{ sr_item.parent }}.\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(thissr.posting_date), 'yyyy-MM-dd'), 'desc': textline }] %}  \n            {% endif %}\n        {% endfor %} \n        \n\n        {# Get from Service Orders #}\n        \n        {% set service_machines = frappe.get_all('Service Device', filters={'docstatus': 1, 'serial_number': doc.name, 'parenttype': 'Service Order'}, fields=['parent']) %}\n        {% set services = [] %}\n        {% for machine in service_machines %}\n            {% set waste = services.append( {'name': machine.parent} ) %}\n        {% endfor %}\n        \n        {% for service in services %}\n            {% set order = frappe.get_doc('Service Order', service.name) %}\n            {% set textline %}\n                Service Order {{ order.name }} was raised {% if order.customer %}by {{ order.customer_name }}{% else %}internally{% endif %}.\n                {% if order.job_type == \"SLA\" %}\n                    <br>It was covered under SLA.\n                    {% if order.sla %}\n                         The contract the device was covered under is {{ order.sla }}.\n                    {% endif %}\n                {% else %}\n                    It was not covered under any SLA.\n                {% endif %}\n                {% if order.time_taken|length > 0 %}\n                    {% set technician_line = \" It was attended to by {{ order.time_taken[0].technician }}\" %}\n                    {% if order.time_taken|length > 1 %}\n                        {% for i in range(1, order.time_taken|length) %}\n                            {{ technician_line.append( \", \" + order.time_taken[i].technician) }}\n                        {% endfor %}\n                    {% endif %}\n                    {{ technician_line.append(\".\") }}\n                    {{ technician_line }}\n                {% endif %}\n                {% if order.devices|length == 2 %}\n                     It was serviced along with 1 other device.\n                {% elif order.devices|length > 2 %}\n                     It was serviced along with {{ order.devices|length - 1 }} other devices.\n                {% endif %}\n                {% if order.items|length > 0 %}\n                    The following parts were fitted:\n                    {% for part in order.items %}\n                        <li style=\"color: #474c51; letter-spacing: normal !important;\">{{ part.used_qty|int }} {{ part.uom }} {{ part.part }}: {{ part.part_name }}</li>\n                    {% endfor %}\n                {% endif %}\n            {% endset %}\n            {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(order.start_date), 'yyyy-MM-dd'), 'desc': textline }] %}  \n        {% endfor %}         \n\n        {# Get from Warranty Claims #}\n        \n        {% set warranty_claims = frappe.get_all('Warranty Claim', filters={'serial_no': ['like', '%'~doc.serial_no~'%']}, fields=['name','docstatus','serial_no','complaint_date','complaint']) %}\n\n        {% for wc_item in warranty_claims %}\n            {% if wc_item.docstatus != 2 %}\n                {% set textline %}\n                    Warranty claim {{ wc_item.name }} was raised: {{ wc_item.complaint }}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(wc_item.complaint_date), 'yyyy-MM-dd'), 'desc': textline }] %}  \n            {% endif %}\n        {% endfor %}\n\n\n        {# Get from Warranty Swap Outs coming in #}\n        \n        {% set warranty_swap_outs = frappe.get_all('Warranty Swap Out', filters={'serial_no_in': ['like', '%'~doc.serial_no~'%']}, fields=['name','docstatus','serial_no_in','date','issue','customer','warranty_claim','serial_no_out']) %}\n\n        {% for wso_item in warranty_swap_outs %}\n            {% if wso_item.docstatus != 2 and wso_item.docstatus != 0 %}\n                {% set textline %}\n                    Warranty swap out {{ wso_item.name }} was done, with {{ wso_item.serial_no_in }} being returned \n                    and {{ wso_item.serial_no_out }} issued as a replacement\n                    {% if wso_item.customer %} to {{ wso_item.customer }}.{% else %}.{% endif %}\n                    {% if wso_item.issue %} Linked to {{ wso_item.issue }}.{% endif %}\n                    {% if wso_item.warranty_claim %} Linked to {{ wso_item.warranty_claim }}.{% endif %}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(wso_item.date), 'yyyy-MM-dd'), 'desc': textline }] %}  \n            {% endif %}\n        {% endfor %}         \n\n\n        {# Get from Warranty Swap Outs going out #}\n        \n        {% set warranty_swap_outs = frappe.get_all('Warranty Swap Out', filters={'serial_no_out': ['like', '%'~doc.serial_no~'%']}, fields=['name','docstatus','serial_no_in','date','issue','customer','warranty_claim','serial_no_out']) %}\n\n        {% for wso_item in warranty_swap_outs %}\n            {% if wso_item.docstatus != 2 and wso_item.docstatus != 0 %}\n                {% set textline %}\n                    Warranty swap out {{ wso_item.name }} was done, with {{ wso_item.serial_no_in }} being returned \n                    and {{ wso_item.serial_no_out }} issued as a replacement\n                    {% if wso_item.customer %} to {{ wso_item.customer }}.{% else %}.{% endif %}\n                    {% if wso_item.issue %} Linked to {{ wso_item.issue }}.{% endif %}\n                    {% if wso_item.warranty_claim %} Linked to {{ wso_item.warranty_claim }}.{% endif %}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(wso_item.date), 'yyyy-MM-dd'), 'desc': textline }] %}  \n            {% endif %}\n        {% endfor %}\n        \n        {# Get from Component History (as component) #}\n        \n        {% set component_history = frappe.get_all('Component History', filters=[['serial_no', 'like', '%'~doc.serial_no~'%']], fields=['name','date','docstatus','parent','action']) %}\n\n        {% for ch_item in component_history %}\n            {% set thisparent = frappe.get_doc(\"Serial No\", ch_item.parent) %}\n                {% set textline %}\n                    {% if ch_item.action == \"Installed\" %}\n                        Installed as component in {{ thisparent.item_name }} with serial number {{ thisparent.name }}. \n                    {% elif ch_item.action == \"Uninstalled\" %}\n                        Uninstalled as component from {{ thisparent.item_name }} with serial number {{ thisparent.name }}.           \n                    {% endif %}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(ch_item.date), 'yyyy-MM-dd'), 'desc': textline }] %}            \n        {% endfor %}\n        \n        {# Get from Component History (as parent) #}\n        \n        {% set component_history = frappe.get_all('Component History', filters=[['parent', 'like', '%'~doc.serial_no~'%']], fields=['name','date','serial_no','docstatus','parent','action']) %}\n\n        {% for ch_item in component_history %}\n                {% set cserial = frappe.get_doc(\"Serial No\", ch_item.serial_no) %}\n                {% if ch_item.serial_no not in installed.components %}\n                    {% set installed.components = installed.components + [ch_item.serial_no] %}\n                {% endif %}\n                {% set textline %}\n                    {% if ch_item.action == \"Installed\" %}\n                        <span style=\"color: green;\">&#8594;</span> {{ cserial.item_name }} was installed (SN: {{ ch_item.serial_no }}).\n                    {% elif ch_item.action == \"Uninstalled\" %}\n                        <span style=\"color: red;\">&#8592;</span> {{ cserial.item_name }} with serial number {{ ch_item.serial_no }} was <strong>removed</strong>.\n                    {% endif %}\n                {% endset %}\n                {% set output_line.value = output_line.value + [{'date': frappe.utils.formatdate(frappe.utils.get_datetime(ch_item.date), 'yyyy-MM-dd'), 'desc': textline }] %}            \n        {% endfor %}\n        \n        \n    <table class=\"layout-table\">\n        <tbody>\n            {% for tline in output_line.value | sort(attribute='date') %}\n                <tr class=\"layout-row\">\n                    <td class=\"layout-cell\" id=\"date-cell\">\n                        {% if loop.previtem is not defined or loop.previtem.date != tline.date %}\n                            <strong>{{ frappe.utils.formatdate(frappe.utils.get_datetime(tline.date), 'dd-MM-yyyy') }}</strong>\n                        {% endif %}\n                    </td>\n                    <td class=\"layout-cell\" id=\"history-line\">\n                        <span style=\"flex-wrap: wrap; font-colour= #ff0000;\">{{ tline.desc }}</span>\n                    </td>\n                </tr>\n            {% endfor %}  \n        </tbody>\n    </table>\n</div>\n\n        {# Final check of what components should be installed #}\n        \n        {% if installed.components %}\n            {% set component_line = namespace(value=[]) %}\n            {% set action_count = namespace(value=0) %}\n            {% for component in installed.components %}\n                {% set thishistory = frappe.get_all('Component History', filters=[['parent', 'like', '%'~doc.serial_no~'%'],['serial_no', '=', component]], fields=['name','date','serial_no','docstatus','parent','action']) %}\n                {% set action_count.value = 0 %}\n                {% for thisitem in thishistory %}\n                    {% if thisitem.action == \"Installed\" %}\n                        {% set action_count.value = action_count.value + 1 %}\n                    {% elif thisitem.action == \"Uninstalled\" %}\n                        {% set action_count.value = action_count.value - 1 %}\n                    {% endif %}\n                {% endfor %}\n\n                {% if action_count.value > 0 %}\n                    {% set cserial = frappe.get_doc(\"Serial No\", component) %}\n                    {% set component_line.value = component_line.value + [{'group': cserial.item_group, 'code': cserial.item_code, 'serial': cserial.serial_no }] %}            \n                {% endif %}\n            {% endfor %}\n\n            <div class=\"section\">\n                <h2>Currently Installed Components</h2>\n                <table class=\"layout-table\">\n                    <tbody>\n                        {% for cline in component_line.value | sort(attribute='group') %}\n                            <tr class=\"layout-row\">\n                                <td class=\"layout-cell\" id=\"date-cell\">\n                                    {% if loop.previtem is not defined or loop.previtem.group != cline.group %}\n                                        <strong>{{ cline.group }}</strong>\n                                    {% endif %}\n                                </td>\n                                <td class=\"layout-cell\">\n                                    {{ cline.code }}\n                                </td>\n                                <td class=\"layout-cell\">\n                                    {{ cline.serial }}\n                                </td>\n                            </tr>\n                        {% endfor %}\n                    </tbody>\n                </table>\n            </div>\n        {% endif %}\n    \n\n\n\n{{ pagefooter() }}",
 "idx": 0,
 "line_breaks": 0,
 "modified": "2021-12-13 15:41:40.101389",
 "modified_by": "andrew@eskilltrading.com",
 "module": "Eskill Customisations",
 "name": "Eskill Serial Number History",
 "owner": "Administrator",
 "print_format_builder": 0,
 "print_format_type": "Jinja",
 "raw_printing": 0,
 "show_section_headings": 0,
 "standard": "Yes"
}